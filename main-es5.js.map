{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth.component.ts","webpack:///src/app/auth/auth.component.html","webpack:///src/app/cars/car-add/car-add.component.ts","webpack:///src/app/cars/car-add/car-add.component.html","webpack:///src/app/cars/car-free/car-free.component.ts","webpack:///src/app/cars/car-free/car-free.component.html","webpack:///src/app/cars/car/car.component.ts","webpack:///src/app/cars/car/car.component.html","webpack:///src/app/cars/cars.component.ts","webpack:///src/app/cars/cars.component.html","webpack:///src/app/cars/cars.module.ts","webpack:///src/app/error-page/error-page.component.ts","webpack:///src/app/error-page/error-page.component.html","webpack:///src/app/loadings/circle/circle.component.ts","webpack:///src/app/loadings/circle/circle.component.svg","webpack:///src/app/loadings/free-dots/free-dots.component.ts","webpack:///src/app/loadings/free-dots/free-dots.component.svg","webpack:///src/app/loadings/loadings.module.ts","webpack:///src/app/my.validators.ts","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/app/notification/notification.component.ts","webpack:///src/app/notification/notification.component.html","webpack:///src/app/pipes/convert-time.pipe.ts","webpack:///src/app/pipes/decode-logo.pipe.ts","webpack:///src/app/pipes/filter-cars.pipe.ts","webpack:///src/app/pipes/filter-users.pipe.ts","webpack:///src/app/services/auth.guard.ts","webpack:///src/app/services/car.service.ts","webpack:///src/app/services/login.guard.ts","webpack:///src/app/services/notification.service.ts","webpack:///src/app/services/shift.service.ts","webpack:///src/app/services/user.service.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/top-block/top-block.component.ts","webpack:///src/app/top-block/top-block.component.html","webpack:///src/app/users/user-add/user-add.component.ts","webpack:///src/app/users/user-add/user-add.component.html","webpack:///src/app/users/user-free/user-free.component.ts","webpack:///src/app/users/user-free/user-free.component.html","webpack:///src/app/users/user/user.component.ts","webpack:///src/app/users/user/user.component.html","webpack:///src/app/users/users.component.ts","webpack:///src/app/users/users.component.html","webpack:///src/app/users/users.module.ts","webpack:///src/env.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","loadChildren","m","CarsModule","UsersModule","redirectTo","pathMatch","AppRoutingModule","forRoot","preloadingStrategy","imports","AppComponent","userService","token","localStorage","getItem","info","isAuth","selector","templateUrl","styleUrls","AppModule","register","enabled","production","declarations","providers","bootstrap","AuthComponent","router","form","login","minLength","required","number","password","userAutorise","value","subscribe","user","loading","setItem","navigate","error","message","submit","CarAddComponent","carService","notificationService","numberAuto","model","VIN","STS","OSAGO","dateOSAGO","tel","IMEI","addCar","car","addCarState","text","showBox","reset","offShow","CarFreeComponent","CarComponent","route","edit","deleteMode","comments","params","sub","getByNumber","unsubscribe","String","slice","data","Date","updateCar","colorError","updating","deleteCar","res","deleteByNumber","deleting","save","closeEdit","CarsComponent","console","log","getCars","cars","searchNumber","updateSearch","forChild","canActivateChild","children","ErrorPageComponent","CircleComponent","size","color","FreeDotsComponent","width","height","background","fill","LoadingsModule","MyValidators","control","isNaN","Number","NaN","reg","test","toUpperCase","NavbarComponent","removeItem","logout","NotificationComponent","right","animations","ConvertTimePipe","h","Math","round","name","DecodeLogoPipe","trim","FilterCarsPipe","filter","toLowerCase","includes","FilterUsersPipe","AuthGuard","state","providedIn","CarService","http","get","observable","setInterval","next","find","post","push","put","pipe","LoginGuard","NotificationService","setTimeout","ShiftService","shifts","headers","userid","userId","ids","UserService","registering","users","loginInfo","userInfo","_id","SharedModule","TopBlockComponent","onChange","searchInput","nativeElement","focus","emit","searchText","focusSearch","changeText","UserAddComponent","userRegister","addUserToState","UserFreeComponent","UserComponent","shiftService","editPassword","carListIdx","checkedShift","namesEditInput","password1","password2","invalidPassword","invalidLogin","getById","getShifts","shiftId","deleteShifts","key","sumTime","map","idx","updateUser","nameInput","updateValueInput","closeInput","validPasswords","deleteUser","deleteUserFromState","border","left","cursor","UsersComponent","getUsers","searchName","URL_SERVER","URLS_LOGO","R","W","K","environment","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\r\nimport { AuthComponent } from './auth/auth.component';\r\nimport { ErrorPageComponent } from './error-page/error-page.component';\r\nimport { LoginGuard } from './services/login.guard';\r\n\r\nconst routes: Routes = [\r\n  { path: 'login', component: AuthComponent, canActivate: [LoginGuard] },\r\n  {path: 'cars', loadChildren: () => import('./cars/cars.module').then((m) => m.CarsModule)},\r\n  {\r\n    path: 'users',\r\n    loadChildren: () =>\r\n      import('./users/users.module').then((m) => m.UsersModule),\r\n  },\r\n  { path: '', redirectTo: '/cars', pathMatch: 'full' },\r\n  { path: '**', component: ErrorPageComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules }),\r\n  ],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\nimport { User, UserService } from './services/user.service';\nimport * as jwt_decode from 'jwt-decode';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  token: string;\n\n  constructor(public userService: UserService) {}\n\n  ngOnInit(): void {\n    this.token = localStorage.getItem('TOKEN');\n    if (this.token) {\n      const info: User = jwt_decode(this.token);\n      this.userService.isAuth = true;\n    }\n  }\n}\n","<app-navbar *ngIf=\"userService.isAuth\"></app-navbar>\n<div class=\"general\">\n  <router-outlet></router-outlet>\n</div>\n<app-notification></app-notification>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AuthComponent } from './auth/auth.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ErrorPageComponent } from './error-page/error-page.component';\nimport { SharedModule } from './shared/shared.module';\nimport { UsersModule } from './users/users.module';\nimport { CarsModule } from './cars/cars.module';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LoadingsModule } from './loadings/loadings.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AuthComponent,\n    NavbarComponent,\n    ErrorPageComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    CarsModule,\n    UsersModule,\n    SharedModule,\n    BrowserAnimationsModule,\n    LoadingsModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production,\n    }),\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MyValidators } from '../my.validators';\nimport { UserService, User } from '../services/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss'],\n})\nexport class AuthComponent implements OnInit {\n  form: FormGroup;\n  error: string;\n\n  constructor(public userService: UserService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      login: new FormControl('', [\n        Validators.minLength(10),\n        Validators.required,\n        MyValidators.number,\n      ]),\n      password: new FormControl('', [\n        Validators.minLength(6),\n        Validators.required,\n      ]),\n    });\n  }\n\n  submit() {\n    this.userService.userAutorise(this.form.value).subscribe(\n      (user) => {\n        this.userService.loading = false;\n        this.userService.isAuth = true;\n        localStorage.setItem('TOKEN', user.token);\n        this.router.navigate(['/cars']);\n      },\n      (error) => (this.error = error.error.message)\n    );\n  }\n}\n","<div class=\"auth-block\">\n  <form class=\"form-auth\" [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n    <h3>Логин</h3>\n    <input type=\"text\" placeholder=\"Логин\" formControlName=\"login\" />\n\n    <div\n      *ngIf=\"form.get('login').invalid && form.get('login').touched\"\n      class=\"validation\"\n    >\n      <small *ngIf=\"form.get('login').errors.required\">\n        Логин отсутсвует.\n      </small>\n      <small *ngIf=\"form.get('login').errors.NaN\">\n        Логин должен быть номером телефона.\n      </small>\n      <small\n        *ngIf=\"\n          form.get('login').errors.minlength && !form.get('login').errors.NaN\n        \"\n      >\n        Логин должен быть\n        {{ form.get(\"login\").errors.minlength[\"requiredLength\"] }} символов.\n      </small>\n    </div>\n\n    <h3>Пароль</h3>\n\n    <input type=\"password\" placeholder=\"Пароль\" formControlName=\"password\" />\n\n    <div\n      *ngIf=\"form.get('password').invalid && form.get('password').touched\"\n      class=\"validation\"\n    >\n      <small *ngIf=\"form.get('password').errors.required\">\n        Пароль отсутсвует.\n      </small>\n      <small *ngIf=\"form.get('password').errors.minlength\">\n        Пароль должен быть не менее\n        {{ form.get(\"password\").errors.minlength[\"requiredLength\"] }} символов.\n      </small>\n    </div>\n\n    <button class=\"btn\" [disabled]=\"form.invalid\">\n      <app-free-dots\n        width=\"40px\"\n        height=\"10px\"\n        background=\"#333333\"\n        fill=\"#ffffff\"\n        *ngIf=\"userService.loading; else lable\"\n      ></app-free-dots>\n      <ng-template #lable>Войти</ng-template>\n    </button>\n\n    <div class=\"validation\" *ngIf=\"error\">\n      <small>{{ error }}</small>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MyValidators } from '../../my.validators';\nimport { CarService } from '../../services/car.service';\nimport { NotificationService } from '../../services/notification.service';\n\n@Component({\n  selector: 'app-car-add',\n  templateUrl: './car-add.component.html',\n  styleUrls: ['./car-add.component.scss'],\n})\nexport class CarAddComponent implements OnInit {\n  form: FormGroup;\n  error: any;\n\n  constructor(\n    public carService: CarService,\n    private notificationService: NotificationService\n  ) {}\n\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      number: new FormControl('', [MyValidators.numberAuto]),\n      model: new FormControl('R'),\n      info: new FormGroup({\n        VIN: new FormControl(''),\n        STS: new FormControl(''),\n        OSAGO: new FormControl(''),\n        dateOSAGO: new FormControl(''),\n        code: new FormControl(''),\n        tel: new FormControl(''),\n        IMEI: new FormControl(''),\n      }),\n    });\n  }\n\n  submit() {\n    this.carService.addCar(this.form.value).subscribe(\n      (car) => {\n        this.carService.loading = false;\n        this.carService.addCarState(car);\n        this.notificationService.text = 'Авто добавлено!';\n        this.notificationService.showBox = 'on';\n        this.form.reset();\n      },\n      (error) => {\n        this.error = error.error.message;\n        this.notificationService.text = error.error.message;\n        this.notificationService.showBox = 'on';\n        this.notificationService.offShow();\n        this.carService.loading = false;\n      },\n      () => {\n        this.notificationService.offShow();\n        this.carService.loading = false;\n      }\n    );\n  }\n}\n","<div>\n  <h3>Новый автомобиль</h3>\n  <form class=\"form-add-car\" [formGroup]=\"form\" (submit)=\"submit()\">\n    <div class=\"flex-column\">\n      <div class=\"input-line\">\n        <label>Гос. номер</label>\n        <input type=\"text\" placeholder=\"A000AA\" formControlName=\"number\" />\n      </div>\n      <span\n        *ngIf=\"form.get('number').invalid && form.get('number').touched\"\n        class=\"validation\"\n      >\n        <small *ngIf=\"form.get('number').errors.reg\"\n          >Некоректный номер автомобиля</small\n        >\n      </span>\n      <div class=\"input-line\">\n        <label>Марка автомобиля</label>\n        <select formControlName=\"model\">\n          <option value=\"R\">Renault</option>\n          <option value=\"W\">Volkswagen</option>\n          <option value=\"K\">KIA</option>\n        </select>\n      </div>\n    </div>\n    <div class=\"flex-column\" formGroupName=\"info\">\n      <div class=\"input-line\">\n        <label>VIN-код</label>\n        <input type=\"text\" formControlName=\"VIN\" />\n      </div>\n      <div class=\"input-line\">\n        <label>Номер СТС</label>\n        <input type=\"text\" formControlName=\"STS\" />\n      </div>\n      <div class=\"input-line\">\n        <label>Номер ОСАГО</label>\n        <input type=\"text\" formControlName=\"OSAGO\" />\n      </div>\n      <div class=\"input-line\">\n        <label>Дата ОСАГО</label>\n        <input type=\"date\" formControlName=\"dateOSAGO\" />\n      </div>\n      <div class=\"input-line\">\n        <label>Код магнитолы</label>\n        <input type=\"text\" formControlName=\"code\" />\n      </div>\n      <div class=\"input-line\">\n        <label>Телефон</label>\n        <input type=\"text\" formControlName=\"tel\" />\n      </div>\n      <div class=\"input-line\">\n        <label>IMEI</label>\n        <input type=\"text\" formControlName=\"IMEI\" />\n      </div>\n    </div>\n    <div class=\"btn-block\">\n      <button class=\"btn\" type=\"submit\">\n        <app-free-dots\n          width=\"40px\"\n          height=\"10px\"\n          background=\"#333333\"\n          fill=\"#ffffff\"\n          *ngIf=\"carService.loading; else lable\"\n        ></app-free-dots>\n        <ng-template #lable>Добавить</ng-template>\n      </button>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-car-free',\r\n  templateUrl: './car-free.component.html',\r\n  styleUrls: ['./car-free.component.scss']\r\n})\r\nexport class CarFreeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"car-free\">\n  <h1>Выберите авто</h1>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Car, CarService, Info } from '../../services/car.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { NotificationService } from '../../services/notification.service';\n\n@Component({\n  selector: 'app-car',\n  templateUrl: './car.component.html',\n  styleUrls: ['./car.component.scss'],\n})\nexport class CarComponent implements OnInit {\n  car: Car;\n  sub: Subscription;\n  edit = false;\n  STS = '';\n  OSAGO = '';\n  dateOSAGO: Date | string = '';\n  deleteMode = false;\n  comments = '';\n\n  constructor(\n    private carService: CarService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private notificationService: NotificationService\n  ) {}\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params: Params) => {\n      this.sub = this.carService.getByNumber(params.number).subscribe((car) => {\n        if (car) {\n          this.car = car;\n          this.sub.unsubscribe();\n          this.STS = this.car?.info?.STS;\n          this.OSAGO = this.car?.info?.OSAGO;\n          this.dateOSAGO = String(this.car?.info?.dateOSAGO).slice(0, 10);\n          this.comments = this.car.comments;\n        }\n      });\n    });\n  }\n\n  save() {\n    const data: Info = {\n      STS: this.STS,\n      OSAGO: this.OSAGO,\n      dateOSAGO: new Date(this.dateOSAGO),\n    };\n    this.carService.updateCar(this.car.number, this.comments, data).subscribe(\n      (car) => {\n        this.car = car;\n        this.notificationService.text = 'Информация обновлена!';\n        this.notificationService.showBox = 'on';\n        this.edit = false;\n      },\n      (error) => {\n        this.notificationService.text = error.error.message;\n        this.notificationService.colorError = true;\n        this.notificationService.showBox = 'on';\n        this.carService.updating = false;\n        this.notificationService.offShow();\n      },\n      () => {\n        this.carService.updating = false;\n        this.notificationService.offShow();\n      }\n    );\n  }\n\n  delete() {\n    this.carService.deleteCar(this.car.number).subscribe(\n      (res) => {\n        this.notificationService.text = 'Автомобиль удален!';\n        this.notificationService.showBox = 'on';\n        this.carService.deleteByNumber(this.car.number);\n        this.router.navigate(['/cars']);\n      },\n      (error) => {\n        this.edit = false;\n        this.notificationService.colorError = true;\n        this.notificationService.showBox = 'on';\n        this.notificationService.text = error.error.message;\n        this.carService.deleting = false;\n        this.deleteMode = false;\n        this.notificationService.offShow();\n      },\n      () => {\n        this.carService.deleting = false;\n        this.deleteMode = false;\n        this.notificationService.offShow();\n      }\n    );\n  }\n\n  closeEdit() {\n    this.STS = this.car?.info?.STS;\n    this.OSAGO = this.car?.info?.OSAGO;\n    this.dateOSAGO = this.car?.info?.dateOSAGO;\n    this.edit = false;\n    this.comments = this.car?.comments;\n  }\n}\n","<div class=\"car\">\n  <h2>{{ car ? car.number : \"\" }}</h2>\n  <div class=\"car-info\">\n    <div class=\"number\">\n      <label>Номер автомобиля:</label>\n      <label class=\"info\">{{ car?.number }}</label>\n    </div>\n    <div class=\"date\">\n      <label>Дата последнего обслуживания:</label>\n      <label class=\"info\">{{ car?.lastService | date: \"dd.MM.yyyy\" }}</label>\n    </div>\n    <div class=\"vin\">\n      <label>VIN:</label>\n      <label class=\"info\">{{ car?.info?.VIN }}</label>\n    </div>\n    <div class=\"sts\" [ngSwitch]=\"edit\">\n      <label>СТС:</label>\n      <label class=\"info\" *ngSwitchCase=\"false\">{{ car?.info?.STS }}</label>\n      <input [(ngModel)]=\"STS\" *ngSwitchCase=\"true\" />\n    </div>\n    <div class=\"osago\" [ngSwitch]=\"edit\">\n      <label>ОСАГО:</label>\n      <label class=\"info\" *ngSwitchCase=\"false\">{{ car?.info?.OSAGO }}</label>\n      <input [(ngModel)]=\"OSAGO\" *ngSwitchCase=\"true\" />\n    </div>\n    <div class=\"date-osago\" [ngSwitch]=\"edit\">\n      <label>Дата начала страховки:</label>\n      <label class=\"info\" *ngSwitchCase=\"false\">{{\n        car?.info?.dateOSAGO | date: \"dd.MM.yyyy\"\n      }}</label>\n      <input type=\"date\" [(ngModel)]=\"dateOSAGO\" *ngSwitchCase=\"true\" />\n    </div>\n    <div class=\"code\">\n      <label>Код магнитолы:</label>\n      <label class=\"info\">{{ car?.info?.code }}</label>\n    </div>\n    <div class=\"tel\">\n      <label>Телефон:</label>\n      <label class=\"info\">{{ car?.info?.tel }}</label>\n    </div>\n    <div class=\"imei\">\n      <label>IMEI:</label>\n      <label class=\"info\">{{ car?.info?.IMEI }}</label>\n    </div>\n    <div class=\"comment\">\n      <label>Комментарий:</label>\n      <textarea\n        name=\"\"\n        id=\"\"\n        cols=\"100\"\n        rows=\"2\"\n        name=\"comment\"\n        [(ngModel)]=\"comments\"\n        [readonly]=\"!this.edit\"\n      >\n      </textarea>\n    </div>\n    <div class=\"buttons\">\n      <button\n        type=\"submit\"\n        [class]=\"edit ? 'save' : 'edit'\"\n        (click)=\"edit ? save() : (edit = true)\"\n      >\n        {{ edit ? \"Сохранить\" : \"Изменить\" }}\n      </button>\n      <button\n        [class]=\"edit ? 'cancel' : 'delete'\"\n        (click)=\"edit ? closeEdit() : (deleteMode = true)\"\n      >\n        {{ edit ? \"Отменить\" : \"Удалить\" }}\n      </button>\n    </div>\n  </div>\n</div>\n\n<div class=\"modal-delete\" *ngIf=\"deleteMode\">\n  <div>\n    <label>Вы уверены что хотите удалить автомобиль?</label>\n    <span>\n      <button class=\"delete\" (click)=\"delete()\">Удалить</button>\n      <button class=\"edit\" (click)=\"deleteMode = false\">Отменить</button>\n    </span>\n  </div>\n</div>\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { CarService } from '../services/car.service';\n\n@Component({\n  selector: 'app-cars',\n  templateUrl: './cars.component.html',\n  styleUrls: ['./cars.component.scss'],\n})\nexport class CarsComponent implements OnInit {\n  error: string;\n  searchNumber: string;\n\n  constructor(public carService: CarService) {}\n\n  ngOnInit(): void {\n    console.log('загружаю данные');\n    this.carService.getCars().subscribe(\n      (cars) => {\n        this.carService.cars = cars;\n      },\n      (error) => {\n        this.error = error.error.message;\n        this.carService.loading = false;\n      },\n      () => {\n        this.carService.loading = false;\n      }\n    );\n  }\n\n  updateSearch(text: string) {\n    this.searchNumber = text;\n  }\n}\n","<div class=\"gridPage\">\n  <div class=\"left\">\n    <app-top-block\n      (onChange)=\"updateSearch($event)\"\n      link=\"/cars\"\n    ></app-top-block>\n    <div class=\"scroll\">\n      <div class=\"sub-scroll\">\n        <div\n          *ngFor=\"let car of carService.cars | filterCars: searchNumber\"\n          class=\"line\"\n          [routerLink]=\"['/cars', car.number]\"\n          routerLinkActive=\"active-line\"\n        >\n          <img\n            [src]=\"car.model | decodeLogo\"\n            [alt]=\"car.model\"\n            width=\"40px\"\n            height=\"40px\"\n          />\n          <p>{{ car.number }}</p>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"right\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CarComponent } from './car/car.component';\nimport { CarsComponent } from './cars.component';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { AuthGuard } from '../services/auth.guard';\nimport { CarAddComponent } from './car-add/car-add.component';\nimport { CarFreeComponent } from './car-free/car-free.component';\nimport { LoadingsModule } from '../loadings/loadings.module';\n\n@NgModule({\n  declarations: [\n    CarComponent,\n    CarsComponent,\n    CarAddComponent,\n    CarFreeComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    SharedModule,\n    LoadingsModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: CarsComponent,\n        canActivate: [AuthGuard],\n        canActivateChild: [AuthGuard],\n        children: [\n          {\n            path: 'add',\n            component: CarAddComponent,\n          },\n          {\n            path: ':number',\n            component: CarComponent,\n          },\n          { path: '', component: CarFreeComponent },\n        ],\n      },\n    ]),\n    ReactiveFormsModule,\n  ],\n})\nexport class CarsModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error-page',\n  templateUrl: './error-page.component.html',\n  styleUrls: ['./error-page.component.scss']\n})\nexport class ErrorPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"error\">\n  <h2>Страница не найдена</h2>\n  <button class=\"btn\" [routerLink]=\"['/cars']\">На главную</button>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-circle',\n  templateUrl: './circle.component.svg',\n  styleUrls: ['./circle.component.scss'],\n})\nexport class CircleComponent implements OnInit {\n  @Input() size = '64px';\n  @Input() color = '#000000';\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<svg bind-attr.width=\"size\" bind-attr.height=\"size\" viewBox=\"0 0 128 128\" xml:space=\"preserve\">\n  <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"#FFFFFF\" />\n  <g>\n    <linearGradient id=\"linear-gradient\">\n      <stop offset=\"0%\" stop-color=\"#ffffff\"/>\n      <stop offset=\"100%\" bind-attr.stop-color=\"color\"/>\n    </linearGradient>\n      <path d=\"M63.85 0A63.85 63.85 0 1 1 0 63.85 63.85 63.85 0 0 1 63.85 0zm.65 19.5a44 44 0 1 1-44 44 44 44 0 0 1 44-44z\" fill=\"url(#linear-gradient)\" fill-rule=\"evenodd\"/>\n    <animateTransform attributeName=\"transform\" type=\"rotate\" from=\"360 64 64\" to=\"0 64 64\" dur=\"1080ms\" repeatCount=\"indefinite\"></animateTransform>\n  </g>\n</svg>\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-free-dots',\n  templateUrl: './free-dots.component.svg',\n  styleUrls: ['./free-dots.component.scss'],\n})\nexport class FreeDotsComponent implements OnInit {\n  @Input() width = '150px';\n  @Input() height = '40px';\n  @Input() background = '#ffffff';\n  @Input() fill = '#000000';\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<svg  version=\"1.0\" bind-attr.width=\"width\" bind-attr.height=\"height\" viewBox=\"0 0 128 35\" xml:space=\"preserve\">\n  <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" bind-attr.fill=\"background\" />\n    <g><circle bind-attr.fill=\"fill\" cx=\"17.5\" cy=\"17.5\" r=\"17.5\"/><animate attributeName=\"opacity\" dur=\"1200ms\" begin=\"0s\" repeatCount=\"indefinite\" keyTimes=\"0;0.167;0.5;0.668;1\" values=\"0.3;1;1;0.3;0.3\"/></g>\n    <g><circle bind-attr.fill=\"fill\" cx=\"110.5\" cy=\"17.5\" r=\"17.5\"/><animate attributeName=\"opacity\" dur=\"1200ms\" begin=\"0s\" repeatCount=\"indefinite\" keyTimes=\"0;0.334;0.5;0.835;1\" values=\"0.3;0.3;1;1;0.3\"/></g>\n    <g><circle bind-attr.fill=\"fill\" cx=\"64\" cy=\"17.5\" r=\"17.5\"/><animate attributeName=\"opacity\" dur=\"1200ms\" begin=\"0s\" repeatCount=\"indefinite\" keyTimes=\"0;0.167;0.334;0.668;0.835;1\" values=\"0.3;0.3;1;1;0.3;0.3\"/></g>\n</svg>\n","import { NgModule } from '@angular/core';\nimport { FreeDotsComponent } from './free-dots/free-dots.component';\nimport { CircleComponent } from './circle/circle.component';\n\n@NgModule({\n  imports: [],\n  declarations: [FreeDotsComponent, CircleComponent],\n  exports: [FreeDotsComponent, CircleComponent],\n})\nexport class LoadingsModule {}\n","import { FormControl } from '@angular/forms';\n\nexport class MyValidators {\n  static number(control: FormControl): { [key: string]: boolean } {\n    if (isNaN(Number(control.value))) {\n      return { NaN: true };\n    }\n    return null;\n  }\n  static numberAuto(control: FormControl): { [key: string]: boolean } {\n    const reg = /^[АВЕКМНОРСТУХABEKMHOPCTYX]\\d{3}(?<!000)[АВЕКМНОРСТУХABEKMHOPCTYX]{2}/;\n    if (!reg.test(control.value?.toUpperCase())) {\n      return { reg: true };\n    }\n    return null;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../services/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss'],\n})\nexport class NavbarComponent implements OnInit {\n  constructor(private userService: UserService, private router: Router) {}\n\n  ngOnInit(): void {}\n\n  logout() {\n    this.userService.isAuth = false;\n    localStorage.removeItem('TOKEN');\n    this.router.navigate(['/login']);\n  }\n}\n","<nav class=\"navbar\">\n  <div class=\"heading\">\n    <a [routerLink]=\"['/cars']\">\n      <h1>VoronaCar Admin</h1>\n    </a>\n  </div>\n  <div class=\"points\" [routerLink]=\"['/cars']\" routerLinkActive=\"active\">\n    <h3>Автомобили</h3>\n  </div>\n  <div class=\"points\" [routerLink]=\"['/users']\" routerLinkActive=\"active\">\n    <h3>Пользователи</h3>\n  </div>\n  <div class=\"logout\" (click)=\"logout()\"><h4>Выход</h4></div>\n</nav>\n","import { Component, Input, OnInit } from '@angular/core';\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\nimport { NotificationService } from '../services/notification.service';\n\n@Component({\n  selector: 'app-notification',\n  templateUrl: './notification.component.html',\n  styleUrls: ['./notification.component.scss'],\n  animations: [\n    trigger('box', [\n      state('off', style({ right: '-250px' })),\n      state('on', style({ right: '0px' })),\n      transition('off => on', animate(200)),\n    ]),\n  ],\n})\nexport class NotificationComponent implements OnInit {\n  constructor(public notificationService: NotificationService) {}\n\n  ngOnInit(): void {}\n}\n","<div\n  [@box]=\"notificationService.showBox\"\n  [ngStyle]=\"{\n    background: notificationService.colorError\n      ? 'rgb(243, 134, 134)'\n      : 'hsl(120, 100%, 93%)'\n  }\"\n>\n  <p>{{ notificationService.text }}</p>\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'convertTime',\r\n})\r\nexport class ConvertTimePipe implements PipeTransform {\r\n  transform(value: number): string {\r\n    if (!value) {\r\n      return null;\r\n    }\r\n    let m = value % 60;\r\n    let h = (value - m) / 60;\r\n    return `${h}ч ${Math.round(m)}мин`;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Model } from '../services/car.service';\nimport { URLS_LOGO } from '../../env';\n\n@Pipe({\n  name: 'decodeLogo',\n})\nexport class DecodeLogoPipe implements PipeTransform {\n  transform(value: Model): string {\n    if (!value.trim()) {\n      return null;\n    }\n    return URLS_LOGO[value];\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Car } from '../services/car.service';\r\n\r\n@Pipe({\r\n  name: 'filterCars',\r\n})\r\nexport class FilterCarsPipe implements PipeTransform {\r\n  transform(value: Car[], text: string = ''): Car[] {\r\n    if (text.trim()) {\r\n      return value.filter((car) => {\r\n        return car.number.toLowerCase().includes(text.toLowerCase());\r\n      });\r\n    }\r\n    return value;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { User } from '../services/user.service';\r\n\r\n@Pipe({\r\n  name: 'filterUsers',\r\n})\r\nexport class FilterUsersPipe implements PipeTransform {\r\n  transform(value: User[], text: string = ''): User[] {\r\n    console.log(text);\r\n    if (text.trim()) {\r\n      return value.filter((user) => {\r\n        return user.name.toLowerCase().includes(text.toLowerCase());\r\n      });\r\n    }\r\n    return value;\r\n  }\r\n}\r\n","import {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UserService } from './user.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n  constructor(private userService: UserService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    if (this.userService.isAuth) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n    }\n  }\n\n  canActivateChild(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    return this.canActivate(route, state);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { URL_SERVER } from '../../env';\nimport { Observable, throwError } from 'rxjs';\nimport { User } from './user.service';\nimport { catchError } from 'rxjs/operators';\n\nexport interface Car {\n  id?: string;\n  number: string;\n  model?: Model;\n  lastService?: string;\n  problems?: string[];\n  isRepairing?: boolean;\n  comments?: string;\n  info?: Info;\n}\n\nexport interface Info {\n  VIN?: string;\n  STS?: string;\n  OSAGO?: string;\n  dateOSAGO?: Date | string;\n  code?: string;\n  tel?: string;\n  IMEI?: string;\n}\n\n// type Problem =\n\nexport type Model = 'R' | 'W' | 'K';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CarService {\n  loading = false;\n  updating = false;\n  deleting = false;\n\n  cars: Car[] = [];\n\n  constructor(private http: HttpClient) {}\n\n  getCars(): Observable<Car[]> {\n    this.loading = true;\n    return this.http.get<Car[]>(`${URL_SERVER}/car/info`);\n  }\n\n  getByNumber(number: string): Observable<Car> {\n    return new Observable<Car>((observable) => {\n      setInterval(() => {\n        observable.next(this.cars.find((car) => car.number === number));\n      }, 100);\n    });\n  }\n\n  addCar(car: Car): Observable<Car> {\n    this.loading = true;\n    return this.http.post<Car>(`${URL_SERVER}/car/create`, car);\n  }\n\n  addCarState(car: Car) {\n    this.cars.push(car);\n  }\n\n  updateCar(number: string, comments: string, info: Info): Observable<Car> {\n    this.updating = true;\n    return this.http.put<Car>(`${URL_SERVER}/car/update`, {\n      number,\n      info,\n      comments,\n    });\n  }\n\n  deleteCar(number: string): Observable<any> {\n    this.deleting = true;\n    return this.http.delete<any>(`${URL_SERVER}/car/${number}`).pipe(\n      catchError((error) => {\n        return throwError(error);\n      })\n    );\n  }\n\n  deleteByNumber(number: string) {\n    this.cars = this.cars.filter((car) => car.number !== number);\n  }\n}\n","import {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UserService } from './user.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class LoginGuard implements CanActivate {\n  constructor(private userService: UserService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    if (!this.userService.isAuth) {\n      return true;\n    } else {\n      this.router.navigate(['/cars']);\n    }\n  }\n}\n","import { Injectable, Input } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotificationService {\n  text = '';\n  colorError = false;\n  showBox: 'on' | 'off' = 'off';\n\n  constructor() {}\n\n  offShow = () => {\n    setTimeout(() => {\n      this.showBox = 'off';\n      this.colorError = false;\n    }, 2500);\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { URL_SERVER } from '../../env';\n\nexport interface Shift {\n  _id: string;\n  userId: string;\n  shiftStart: Date;\n  shiftTime: number;\n  valueOil: number;\n  wash: number;\n  carsList: { number: string; value: string }[];\n  isFinished: boolean;\n}\n\n@Injectable()\nexport class ShiftService {\n  loading = false;\n  deleting = false;\n  shifts: Shift[] = [];\n\n  constructor(private http: HttpClient) {}\n\n  getShifts(id: string): Observable<Shift[]> {\n    this.loading = true;\n    return this.http.get<Shift[]>(`${URL_SERVER}/shift/list`, {\n      headers: new HttpHeaders({\n        userid: id,\n      }),\n    });\n  }\n\n  deleteShifts(userId: string, ids: string[]): Observable<Shift[]> {\n    this.deleting = true;\n    return this.http.delete<Shift[]>(`${URL_SERVER}/shift/delete`, {\n      headers: new HttpHeaders({\n        userId: userId,\n        ids: ids,\n      }),\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { observable, Observable } from 'rxjs';\nimport { URL_SERVER } from '../../env';\n\nexport interface User {\n  _id?: string;\n  login?: string;\n  password?: string;\n  name?: string;\n}\n\nexport interface Token {\n  token: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  loading = false;\n  registering = false;\n  updating = false;\n  deleting = false;\n  isAuth = false;\n  users: User[] = [];\n\n  constructor(private http: HttpClient) {}\n\n  userAutorise(loginInfo: User): Observable<Token> {\n    this.loading = true;\n    return this.http.post<Token>(`${URL_SERVER}/auth/login/admin`, loginInfo);\n  }\n\n  userRegister(userInfo: User): Observable<any> {\n    this.registering = true;\n    return this.http.post<any>(`${URL_SERVER}/auth/register`, userInfo);\n  }\n\n  addUserToState(userInfo: User): void {\n    this.users.push(userInfo);\n  }\n\n  getUsers(): Observable<User[]> {\n    this.loading = true;\n    const token = localStorage.getItem('TOKEN');\n    return this.http.get<User[]>(`${URL_SERVER}/user/list`, {\n      headers: new HttpHeaders({\n        token,\n      }),\n    });\n  }\n\n  getById(id: string): Observable<User> {\n    return new Observable<User>((observable) => {\n      setInterval(() => {\n        observable.next(this.users.find((user) => user._id === id));\n      }, 100);\n    });\n  }\n\n  updateUser(user: User): Observable<User> {\n    const token = localStorage.getItem('TOKEN');\n    return this.http.put<User>(`${URL_SERVER}/user/update`, {\n      token,\n      user,\n    });\n  }\n\n  deleteUser(id: string): Observable<any> {\n    return this.http.delete(`${URL_SERVER}/user/${id}`);\n  }\n\n  deleteUserFromState(id: string) {\n    this.users = this.users.filter((user) => user._id !== id);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { DecodeLogoPipe } from '../pipes/decode-logo.pipe';\nimport { FilterCarsPipe } from '../pipes/filter-cars.pipe';\nimport { FilterUsersPipe } from '../pipes/filter-users.pipe';\nimport { TopBlockComponent } from '../top-block/top-block.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { ConvertTimePipe } from '../pipes/convert-time.pipe';\nimport { NotificationComponent } from '../notification/notification.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [FormsModule, RouterModule, CommonModule],\n  declarations: [\n    DecodeLogoPipe,\n    FilterCarsPipe,\n    FilterUsersPipe,\n    ConvertTimePipe,\n    TopBlockComponent,\n    NotificationComponent,\n  ],\n  exports: [\n    DecodeLogoPipe,\n    FilterCarsPipe,\n    FilterUsersPipe,\n    ConvertTimePipe,\n    TopBlockComponent,\n    NotificationComponent,\n  ],\n})\nexport class SharedModule {}\n","import {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  ViewChild,\r\n} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-top-block',\r\n  templateUrl: './top-block.component.html',\r\n  styleUrls: ['./top-block.component.scss'],\r\n})\r\nexport class TopBlockComponent implements OnInit {\r\n  @ViewChild('searchInput', { static: false }) searchInput: ElementRef;\r\n  @Input() link: string;\r\n  @Output() onChange: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  error: string;\r\n  searchText: string;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n  focusSearch() {\r\n    this.searchInput.nativeElement.focus();\r\n  }\r\n\r\n  changeText() {\r\n    this.onChange.emit(this.searchText);\r\n  }\r\n}\r\n","<div class=\"top-block\">\n  <div class=\"search\" (click)=\"focusSearch()\">\n    <input\n      type=\"text\"\n      [(ngModel)]=\"searchText\"\n      (ngModelChange)=\"changeText()\"\n      autocomplete=\"false\"\n      #searchInput\n    />\n    <img\n      src=\"assets/images/search.png\"\n      alt=\"search\"\n      width=\"20px\"\n      height=\"20px\"\n    />\n  </div>\n  <div class=\"add-button line\" [routerLink]=\"[link, 'add']\">Добавить</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { UserService } from '../../services/user.service';\nimport { MyValidators } from '../../my.validators';\nimport { NotificationService } from '../../services/notification.service';\n\n@Component({\n  selector: 'app-user-add',\n  templateUrl: './user-add.component.html',\n  styleUrls: ['./user-add.component.scss'],\n})\nexport class UserAddComponent implements OnInit {\n  form: FormGroup;\n\n  constructor(\n    public userService: UserService,\n    private notificationService: NotificationService\n  ) {}\n\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      name: new FormControl(''),\n      login: new FormControl('', [\n        Validators.minLength(11),\n        Validators.required,\n        MyValidators.number,\n      ]),\n      password: new FormControl('', [\n        Validators.minLength(6),\n        Validators.required,\n      ]),\n    });\n  }\n\n  submit() {\n    this.userService.userRegister(this.form.value).subscribe(\n      (user) => {\n        this.userService.addUserToState(user);\n        this.notificationService.text = 'Пользователь создан!';\n        this.notificationService.showBox = 'on';\n        this.form.reset();\n      },\n      (error) => {\n        this.notificationService.text = error.error.message;\n        this.notificationService.showBox = 'on';\n        this.userService.registering = false;\n        this.notificationService.offShow();\n      },\n      () => {\n        this.userService.registering = false;\n        this.notificationService.offShow();\n      }\n    );\n  }\n}\n","<div class=\"user-add\">\n  <h1>Регистрация пользователя</h1>\n  <form [formGroup]=\"form\" (submit)=\"submit()\">\n    <label>Логин</label>\n    <input formControlName=\"login\" />\n    <div\n      *ngIf=\"form.get('login').invalid && form.get('login').touched\"\n      class=\"validation\"\n    >\n      <small *ngIf=\"form.get('login').errors.required\">\n        Логин отсутсвует.\n      </small>\n      <small *ngIf=\"form.get('login').errors.NaN\">\n        Логин должен быть номером телефона.\n      </small>\n      <small\n        *ngIf=\"\n          form.get('login').errors.minlength && !form.get('login').errors.NaN\n        \"\n      >\n        Логин должен быть\n        {{ form.get(\"login\").errors.minlength[\"requiredLength\"] }} символов.\n      </small>\n    </div>\n\n    <label>ФИО</label>\n    <input formControlName=\"name\" />\n\n    <label>Пароль</label>\n    <input type=\"text\" placeholder=\"Пароль\" formControlName=\"password\" />\n\n    <div\n      *ngIf=\"form.get('password').invalid && form.get('password').touched\"\n      class=\"validation\"\n    >\n      <small *ngIf=\"form.get('password').errors.required\">\n        Пароль отсутсвует.\n      </small>\n      <small *ngIf=\"form.get('password').errors.minlength\">\n        Пароль должен быть не менее\n        {{ form.get(\"password\").errors.minlength[\"requiredLength\"] }} символов.\n      </small>\n    </div>\n\n    <button class=\"btn\" [disabled]=\"form.invalid\">\n      <app-free-dots\n        width=\"40px\"\n        height=\"10px\"\n        background=\"#333333\"\n        fill=\"#ffffff\"\n        *ngIf=\"userService.registering; else lable\"\n      ></app-free-dots>\n      <ng-template #lable>Зарегистрировать</ng-template>\n    </button>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user-free',\r\n  templateUrl: './user-free.component.html',\r\n  styleUrls: ['./user-free.component.scss']\r\n})\r\nexport class UserFreeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"user-free\">\n  <h1>Выберите пользователя</h1>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { User, UserService } from '../../services/user.service';\nimport { ShiftService } from '../../services/shift.service';\nimport { Subscription } from 'rxjs';\nimport {\n  animate,\n  group,\n  query,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\nimport { NotificationService } from '../../services/notification.service';\n\ntype NameInput = 'login' | 'name' | 'password';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss'],\n  providers: [ShiftService],\n  animations: [\n    trigger('input2', [\n      state(\n        'off',\n        style({\n          background: '#f5f5f5',\n          border: '1px solid #f5f5f5',\n          right: '112px',\n        })\n      ),\n      state('on', style({ right: '0' })),\n    ]),\n    trigger('input1', [\n      state(\n        'off',\n        style({\n          background: '#f5f5f5',\n          border: '1px solid #f5f5f5',\n          left: '112px',\n        })\n      ),\n      state('on', style({ left: '0' })),\n    ]),\n    trigger('label', [\n      state(\n        'off',\n        style({\n          background: 'blueviolet',\n          cursor: 'pointer',\n          color: '#fff',\n        })\n      ),\n      state('on', style({ background: '#fff', color: '#000' })),\n    ]),\n    trigger('passwordBlock', [\n      state('off', style({ background: '#f5f5f5' })),\n      state('on', style({ background: '#fff' })),\n      transition('off <=> on', [\n        group([\n          query(\n            'input',\n            animate(\n              500,\n              style({\n                left: 0,\n                right: 0,\n                border: '1px solid #ccc',\n                background: '#fff',\n              })\n            )\n          ),\n          query(\n            'label',\n            animate(\n              500,\n              style({\n                background: '#fff',\n                color: '#000',\n              })\n            )\n          ),\n          animate(500),\n        ]),\n      ]),\n    ]),\n  ],\n})\nexport class UserComponent implements OnInit {\n  editPassword = 'off';\n  user: User;\n  sub: Subscription;\n  carListIdx: number | null = null;\n  checkedShift: string[] = [];\n  namesEditInput: string[] = [];\n  login = '';\n  name = '';\n  password1 = null;\n  password2 = null;\n  invalidPassword = false;\n  invalidLogin = false;\n\n  constructor(\n    private userService: UserService,\n    public shiftService: ShiftService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private notificationService: NotificationService\n  ) {}\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params: Params) => {\n      this.sub = this.userService.getById(params.id).subscribe((user) => {\n        if (user) {\n          this.user = user;\n          this.login = user.login;\n          this.name = user.name;\n          this.sub.unsubscribe();\n        }\n      });\n      this.shiftService.getShifts(params.id).subscribe((shifts) => {\n        this.shiftService.shifts = shifts;\n        this.shiftService.loading = false;\n      });\n    });\n  }\n\n  checkShift(id: string) {\n    this.checkedShift.push(id);\n  }\n\n  uncheckShift(id: string) {\n    this.checkedShift = this.checkedShift.filter((shiftId) => shiftId !== id);\n  }\n\n  deleteShift() {\n    this.shiftService\n      .deleteShifts(this.user._id, this.checkedShift)\n      .subscribe((shifts) => {\n        this.shiftService.shifts = shifts;\n        this.shiftService.deleting = false;\n      });\n  }\n\n  sumData(key: string): number {\n    let sumTime = 0;\n    this.shiftService.shifts.map((e) => {\n      sumTime += e[key];\n    });\n    return sumTime;\n  }\n\n  changeVisibleCarList(idx: number) {\n    if (this.carListIdx == null) {\n      this.carListIdx = idx;\n    } else if (this.carListIdx !== null) {\n      if (this.carListIdx === idx) {\n        this.carListIdx = null;\n      } else {\n        this.carListIdx = idx;\n      }\n    }\n  }\n\n  validPasswords() {\n    if (\n      this.password1.trim() &&\n      this.password2.trim() &&\n      this.password1 !== this.password2\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  submit(data: User) {\n    this.userService.updating = true;\n    this.userService.updateUser(data).subscribe(\n      (user) => {\n        this.user = user;\n        this.notificationService.text = 'Пользователь обновлен!';\n        this.notificationService.showBox = 'on';\n      },\n      (error) => {\n        this.notificationService.text = error.error.message;\n        this.notificationService.colorError = true;\n        this.notificationService.showBox = 'on';\n        this.userService.updating = false;\n        this.notificationService.offShow();\n      },\n      () => {\n        this.userService.updating = false;\n        this.notificationService.offShow();\n      }\n    );\n  }\n\n  updateValueInput(nameInput: NameInput) {\n    switch (nameInput) {\n      case 'login':\n        this.login = this.user.login;\n        break;\n      case 'name':\n        this.name = this.user.name;\n        break;\n      case 'password':\n        this.password1 = this.password2 = null;\n        break;\n    }\n  }\n\n  openInput(nameInput: NameInput) {\n    this.namesEditInput.push(nameInput);\n  }\n\n  closeInput(nameInput: NameInput) {\n    this.namesEditInput = this.namesEditInput.filter(\n      (name) => name !== nameInput\n    );\n    this.updateValueInput(nameInput);\n  }\n\n  saveInput(nameInput: NameInput) {\n    switch (nameInput) {\n      case 'login':\n        if (isNaN(Number(this.login))) {\n          this.invalidLogin = true;\n        } else {\n          this.invalidLogin = false;\n          this.submit({ _id: this.user._id, login: this.login });\n          this.closeInput(nameInput);\n        }\n        break;\n      case 'name':\n        this.submit({ _id: this.user._id, name: this.name });\n        this.closeInput(nameInput);\n        break;\n      case 'password':\n        if (nameInput !== 'password') {\n        } else if (this.validPasswords()) {\n          this.submit({ _id: this.user._id, password: this.password1 });\n          this.closeInput(nameInput);\n          this.editPassword = 'off';\n          this.invalidPassword = false;\n        } else {\n          this.invalidPassword = true;\n        }\n        break;\n    }\n  }\n\n  deleteUser() {\n    this.userService.deleting = true;\n    this.userService.deleteUser(this.user._id).subscribe(\n      () => {\n        this.userService.deleteUserFromState(this.user._id);\n        this.notificationService.text = 'Пользователь удален!';\n        this.notificationService.showBox = 'on';\n        this.router.navigate(['/users']);\n      },\n      (error) => {\n        this.notificationService.text = error.error.message;\n        this.notificationService.colorError = true;\n        this.notificationService.showBox = 'on';\n        this.userService.deleting = false;\n        this.notificationService.offShow();\n      },\n      () => {\n        this.userService.deleting = false;\n        this.notificationService.offShow();\n      }\n    );\n  }\n}\n","<div class=\"user\" *ngIf=\"!shiftService.loading; else loading\">\n  <div class=\"user-name-header\">\n    <h1>{{ user?.name }}</h1>\n    <div class=\"user-delete\" (click)=\"deleteUser()\">\n      <h4>Удалить пользователя</h4>\n      <img src=\"assets/images/trash.png\" />\n    </div>\n  </div>\n  <div>\n    <div class=\"line\" [ngSwitch]=\"namesEditInput.includes('login')\">\n      <label>Номер телефона: &nbsp;</label>\n      <h3 *ngSwitchCase=\"false\">{{ user?.login }}</h3>\n      <input\n        type=\"text\"\n        *ngSwitchCase=\"true\"\n        [(ngModel)]=\"login\"\n        autocomplete=\"false\"\n      />\n      <img\n        [src]=\"\n          namesEditInput.includes('login')\n            ? 'assets/images/save.png'\n            : 'assets/images/edit.png'\n        \"\n        (click)=\"\n          namesEditInput.includes('login')\n            ? saveInput('login')\n            : openInput('login')\n        \"\n      />\n      <img\n        src=\"assets/images/close.png\"\n        (click)=\"closeInput('login')\"\n        *ngSwitchCase=\"true\"\n      />\n    </div>\n    <div class=\"line\" [ngSwitch]=\"namesEditInput.includes('name')\">\n      <label>ФИО: &nbsp;</label>\n      <h4 *ngSwitchCase=\"false\">{{ user?.name }}</h4>\n      <input\n        type=\"text\"\n        *ngSwitchCase=\"true\"\n        [(ngModel)]=\"name\"\n        autocomplete=\"false\"\n      />\n      <img\n        [src]=\"\n          namesEditInput.includes('name')\n            ? 'assets/images/save.png'\n            : 'assets/images/edit.png'\n        \"\n        (click)=\"\n          namesEditInput.includes('name')\n            ? saveInput('name')\n            : openInput('name')\n        \"\n      />\n      <img\n        src=\"assets/images/close.png\"\n        (click)=\"closeInput('name')\"\n        *ngSwitchCase=\"true\"\n      />\n    </div>\n    <div\n      class=\"password\"\n      [@passwordBlock]=\"editPassword\"\n      [ngSwitch]=\"namesEditInput.includes('password')\"\n    >\n      <label\n        (click)=\"editPassword = 'on'; openInput('password')\"\n        [@label]=\"editPassword\"\n        >Изменить пароль:</label\n      >\n      <input\n        type=\"password\"\n        [@input1]=\"editPassword\"\n        [(ngModel)]=\"password1\"\n        [class.invalid]=\"invalidPassword\"\n      />\n      <img src=\"assets/images/error.png\" *ngIf=\"invalidPassword\" />\n      <input\n        type=\"password\"\n        class=\"input2\"\n        [@input2]=\"editPassword\"\n        [disabled]=\"editPassword === 'off'\"\n        [(ngModel)]=\"password2\"\n        [class.invalid]=\"invalidPassword\"\n      />\n      <img\n        src=\"assets/images/save.png\"\n        (click)=\"saveInput('password')\"\n        *ngSwitchCase=\"true\"\n      />\n      <img\n        src=\"assets/images/close.png\"\n        (click)=\"closeInput('password'); editPassword = 'off'\"\n        *ngSwitchCase=\"true\"\n      />\n    </div>\n  </div>\n  <div\n    class=\"table\"\n    *ngIf=\"\n      shiftService.shifts.length !== 0 && shiftService.shifts !== undefined;\n      else shiftFree\n    \"\n  >\n    <table>\n      <thead>\n        <tr>\n          <th colspan=\"2\"></th>\n          <th>Дата</th>\n          <th>Длительность</th>\n          <th>Мойка (рубли)</th>\n          <th>Заправка (литры)</th>\n          <th>Обслуженные машины</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr\n          *ngFor=\"let shift of shiftService.shifts; let idx = index\"\n          [class.checked-tr]=\"checkedShift.includes(shift._id)\"\n        >\n          <td\n            class=\"num\"\n            (click)=\"\n              checkedShift.includes(shift._id)\n                ? uncheckShift(shift._id)\n                : checkShift(shift._id)\n            \"\n          >\n            <input\n              type=\"checkbox\"\n              [checked]=\"checkedShift.includes(shift._id)\"\n            />\n          </td>\n          <td class=\"num\">\n            {{ idx + 1 }}\n          </td>\n          <td>{{ shift.shiftStart | date: \"dd.MM.yyyy\" }}</td>\n          <td>{{ shift.shiftTime | convertTime }}</td>\n          <td>{{ shift.wash }}</td>\n          <td>{{ shift.valueOil }}</td>\n          <td\n            [class.car-active-td]=\"carListIdx !== idx\"\n            class=\"cars-td\"\n            (click)=\"changeVisibleCarList(idx)\"\n            [ngSwitch]=\"carListIdx === idx\"\n          >\n            <div *ngSwitchCase=\"false\" style=\"cursor: pointer;\">\n              <a>{{ shift.carsList.length }}</a>\n            </div>\n            <div class=\"cars-block\" *ngSwitchCase=\"true\">\n              <div class=\"img\">\n                <img src=\"assets/images/back.png\" width=\"25px\" height=\"25px\" />\n              </div>\n              <div class=\"cars\">\n                <div\n                  *ngFor=\"let car of shift.carsList\"\n                  class=\"car\"\n                  [routerLink]=\"['/cars', car.number]\"\n                >\n                  <label>{{ car.number }}</label>\n                  <label class=\"car-value\">{{ car.value }}&thinsp;л.</label>\n                </div>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n      <tfoot>\n        <tr>\n          <td colspan=\"3\" class=\"itog\">\n            Итого:\n          </td>\n          <td>{{ sumData(\"shiftTime\") | convertTime }}</td>\n          <td>{{ sumData(\"wash\") }}</td>\n          <td>{{ sumData(\"valueOil\") }}</td>\n          <td>\n            <button\n              (click)=\"deleteShift()\"\n              class=\"delete\"\n              [disabled]=\"!checkedShift.length\"\n            >\n              Удалить\n            </button>\n          </td>\n        </tr>\n      </tfoot>\n    </table>\n  </div>\n  <ng-template #shiftFree>\n    <h3>Неоплаченых смен пока нет</h3>\n  </ng-template>\n</div>\n\n<ng-template #loading\n  ><div class=\"loading\">\n    <app-circle size=\"100px\" color=\"#7d4cdb\"></app-circle></div\n></ng-template>\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss'],\n})\nexport class UsersComponent implements OnInit {\n  searchName: string;\n\n  constructor(public userService: UserService) {}\n\n  ngOnInit(): void {\n    this.userService.getUsers().subscribe(\n      (users) => {\n        this.userService.users = users;\n      },\n      (error) => {\n        console.log(error.error.message);\n        this.userService.loading = false;\n      },\n      () => {\n        this.userService.loading = false;\n      }\n    );\n  }\n\n  updateSearch(text: string) {\n    this.searchName = text;\n  }\n}\n","<div class=\"gridPage\">\n  <div class=\"left\">\n    <app-top-block\n      (onChange)=\"updateSearch($event)\"\n      link=\"/users\"\n    ></app-top-block>\n    <div class=\"scroll\">\n      <div class=\"sub-scroll\">\n        <div\n          *ngFor=\"let user of userService.users | filterUsers: searchName\"\n          class=\"line fio\"\n          [routerLink]=\"['/users', user._id]\"\n          routerLinkActive=\"active-line fio-active\"\n        >\n          <p>{{ user.name }}</p>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"right\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { UsersComponent } from './users.component';\nimport { UserComponent } from './user/user.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { AuthGuard } from '../services/auth.guard';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { UserFreeComponent } from './user-free/user-free.component';\nimport { UserAddComponent } from './user-add/user-add.component';\nimport { LoadingsModule } from '../loadings/loadings.module';\n\n@NgModule({\n  declarations: [\n    UsersComponent,\n    UserComponent,\n    UserFreeComponent,\n    UserAddComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    SharedModule,\n    LoadingsModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: UsersComponent,\n        canActivate: [AuthGuard],\n        canActivateChild: [AuthGuard],\n        children: [\n          { path: 'add', component: UserAddComponent },\n          {\n            path: ':id',\n            component: UserComponent,\n          },\n          { path: '', component: UserFreeComponent },\n        ],\n      },\n    ]),\n    ReactiveFormsModule,\n  ],\n})\nexport class UsersModule {}\n","export const URL_SERVER = 'https://pacific-cliffs-72324.herokuapp.com';\r\nexport const URLS_LOGO = {\r\n  R: 'assets/images/renault.png',\r\n  W: 'assets/images/volkswagen.png',\r\n  K: 'assets/images/kia.png',\r\n};\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}